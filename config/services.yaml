# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    Gibbon\:
        resource: '../Gibbon/src/*'
        exclude: '../Gibbon/src/{Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    config:
        class: 'Gibbon\Core'
        arguments:
            $directory: '%kernel.project_dir%/Gibbon'
            $installed: '%installed%'
        public: true

    locale:
        class: 'Gibbon\Locale'
        arguments:
            $absolutePath: '%kernel.project_dir%/Gibbon'
        public: true

    session:
        class: Gibbon\Contracts\Services\Session
        public: true

    db:
        class: Gibbon\Database\MySqlConnector
        public: true

    page:
        class: Gibbon\View\Page
        arguments:
            $templateEngine: '@twig'
        public: true

    Gibbon\UI\Components\Header:
        arguments:
            $session: '@session'
            $db: '@db'
        public: true

    Gibbon\UI\Components\Sidebar:
        arguments:
            $session: '@session'
            $db: '@db'
        public: true

    theme:
        class: Gibbon\Domain\System\Theme
        public: true

    action:
        class: App\Entity\Action
        public: true

    module:
        class: Gibbon\Domain\System\Module
        public: true

    App\Manager\GibbonManager:
        arguments:
            $version: '%version%'

    Gibbon\Forms\Form:
        factory: ['Gibbon\Forms\Form', 'create']

    Gibbon\Forms\FormFactory:
        public: true

    Gibbon\Forms\View\FormView:
        public: true
        arguments:
            - '@twig'