details:
    type: markbookEntryByUsername
    name: Markbook - Marks - by Student Username
    table: MarkbookEntry
    modes: { update: true, insert: true, export: true }
    alias: me
access:
    module: Markbook
    action: Edit Markbook_everything
primaryKey:
    id
uniqueKeys:
    - [ markbookColumn, student ]
join:
    MarkbookColumn:
        table: MarkbookEntry
        alias: mc
    CourseClass:
        alias: cc
        table: MarkbookColumn
    Course:
        alias: c
        table: CourseClass
    SchoolYear:
        alias: sy
        table: Course
    Student:
        alias: p
        table: MarkbookEntry
        targetTable: Person
table:
    schoolYear:
        name: "School Year"
        desc: "School year name, as set in School Admin. Must already exist."
        args: { filter: schoolyear, required: true, custom: true, readonly: true }
        relationship: { table: SchoolYear, key: id, field: name  }
        select: sy.name
    course:
        name: "Course"
        desc: "Short Name"
        args: { filter: string, required: true, custom: true, readonly: true }
        relationship: { table: Course, key: id, field: [ nameShort, schoolYear ]  }
        select: c.nameShort
    courseClass:
        name: "Class"
        desc: "Short Name"
        args: { filter: string, required: true, custom: true, readonly: true }
        relationship: { table: CourseClass, key: id, field: [ nameShort, CourseID ]  }
        select: cc.nameShort
    markbookColumn:
        name: "Markbook Column"
        desc: "Name"
        args: { filter: string, required: true }
        relationship: { table: MarkbookColumn, key: id, field: [ name, courseClass ]  }
        select: mc.name
    student:
        name: "Student"
        desc: "Surname, Preferred Name"
        args: { filter: string, required: true }
        relationship: { table: Person, key: id, join: CourseClassPerson, on: [id, Person], field: [username, courseClass] }
        select: p.username
    attainmentValue:
        name: "Attainment Value"
        desc: ""
        args: { filter: string, custom: true }
        select: me.attainmentValue
    attainmentValueRaw:
        name: "Attainment Raw Value"
        desc: ""
        args: { filter: string, custom: true }
        select: me.attainmentValueRaw
    attainmentDescriptor:
        name: "Attainment Descriptor"
        desc: ""
        args: { filter: string, linked: attainmentValue }
        relationship: { table: ScaleGrade, key: descriptor, join: MarkbookColumn, on: [ScaleIDAttainment, ScaleID], field: [ value, MarkbookColumnID ] }
        select: me.attainmentDescriptor
    effortValue:
        name: "Effort Value"
        desc: ""
        args: { filter: string, custom: true }
        select: me.effortValue
    effortDescriptor:
        name: "Effort Descriptor"
        desc: ""
        args: { filter: string, linked: effortValue }
        relationship: { table: ScaleGrade, key: descriptor, join: MarkbookColumn, on: [ScaleIDEffort, ScaleID], field: [ value, MarkbookColumnID ] }
        select: me.effortDescriptor
    comment:
        name: "Comment"
        desc: ""
        args: { filter: string, custom: true }
        select: me.comment
