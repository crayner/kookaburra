details:
    type: rollGroups
    name: Roll Groups
    table: RollGroup
    modes: { update: true, insert: true, export: true }
    alias: rg
access:
    module: School Admin
    action: Manage Roll Groups
primaryKey:
    id
uniqueKeys:
    - [ schoolYear, name ]
    - [ schoolYear, nameShort ]
join:
    SchoolYear:
        table: RollGroup
        alias: sy
    Space:
        table: RollGroup
        alias: s
    Tutor1:
        table: RollGroup
        alias: t1
        targetTable: Person
        reference: tutor
    Tutor2:
        table: RollGroup
        alias: t2
        targetTable: Person
    Tutor3:
        table: RollGroup
        alias: t3
        targetTable: Person
    Assistant1:
        table: RollGroup
        alias: a1
        targetTable: Person
        reference: assistant
    Assistant2:
        table: RollGroup
        alias: a2
        targetTable: Person
    Assistant3:
        table: RollGroup
        alias: a3
        targetTable: Person
    NextRollGroup:
        table: RollGroup
        alias: n
        targetTable: RollGroup
table:
    schoolYear: 
        name: "School Year"
        desc: "School year name, as set in School Admin. Must already exist."
        args: { filter: schoolyear,  required: true }
        relationship: { table: SchoolYear, key: id, field: name  }
        select: sy.name
    name: 
        name: "Name"
        desc: "Needs to be unique in school year."
        args: { filter: string, required: true }
        select: rg.name
    nameShort: 
        name: "Short Name"
        desc: "Needs to be unique in school year."
        args: { filter: string, required: true }
        select: rg.nameShort
    tutor:
        name: "Tutor 1"
        desc: "Up to 3 per roll group. The first-listed will be marked as \"Main Tutor\"."
        args: { filter: string }
        relationship: { table: Person, key: id, field: username }
        select: t1.username
    tutor2:
        name: "Tutor 2"
        desc: ""
        args: { filter: string }
        relationship: { table: Person, key: id, field: username }
        select: t2.username
    tutor3:
        name: "Tutor 3"
        desc: ""
        args: { filter: string }
        relationship: { table: Person, key: id, field: username }
        select: t3.username
    assistant:
        name: "Assistant 1"
        desc: "Up to 3 per roll group. The first-listed will be marked as \"Main Assistant\"."
        args: { filter: string }
        relationship: { table: Person, key: id, field: username }
        select: a1.username
    assistant2:
        name: "Assistant 2"
        desc: ""
        args: { filter: string }
        relationship: { table: Person, key: id, field: username }
        select: a2.username
    assistant3:
        name: "Assistant 3"
        desc: ""
        args: { filter: string }
        relationship: { table: Person, key: id, field: username }
        select: a3.username
    space: 
        name: "Location"
        desc: "Name"
        relationship: { table: Space, key: id, field: name }
        select: s.name
    nextRollGroup: 
        name: "Next Roll Group"
        desc: "Short Name"
        relationship: { table: RollGroup, key: id, field: nameShort }
        select: n.name
    attendance:
        name: "Track Attendance?"
        desc: "Should this class allow attendance to be taken?"
        args: { filter: yesno, custom: true }
        select: rg.attendance
    website: 
        name: "Website"
        desc: "Include http://"
        args: { filter: url, custom: true }
        select: rg.website
