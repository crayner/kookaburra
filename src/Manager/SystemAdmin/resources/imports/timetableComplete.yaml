details:
    type: timetableComplete
    name: Timetable - Complete
    table: TTDayRowClass
    modes: { update: true, insert: true, export: true }
    alias: ttdrc
access:
    module: Timetable Admin
    action: Manage Timetables
primaryKey:
    id
uniqueKeys:
    - [ courseClass, TTDayD, TTColumnRow ]
join:
    TTColumnRow:
        table: TTDayRowClass
        alias: ttcr
        reference: TTColumnRow
    TTDay:
        table: TTDayRowClass
        alias: ttd
        reference: TTDay
    TT:
        table: TTDay
        alias: tt
        reference: TT
    SchoolYear:
        table: TT
        alias: sy
    CourseClass:
        table: TTDayRowClass
        alias: cc
    Space:
        table: TTDayRowClass
        alias: s
    Course:
        table: CourseClass
        alias: c
    CourseClassPerson:
        table: CourseClass
        alias: ccp
        reference: courseClassPeople
    Person:
        table: CourseClassPerson
        alias: p
fields:
    schoolYear:
        name: "School Year"
        desc: "School year name, as set in School Admin. Must already exist."
        args: { filter: schoolyear, required: true, custom: true, readonly: [CourseClass, CourseClassPerson, TTDayRowClass] }
        relationship: { table: SchoolYear, key: SchoolYearID, field: name }
        select: sy.name
    TT:
        name: "Timetable"
        desc: "Short Name"
        args: { filter: string, required: true, custom: true, readonly: true }
        relationship: { table: TT, key: id, field: [nameShort, schoolYear] }
        select: tt.nameShort
    courseNameShort:
        name: "Course Short Name"
        desc: "e.g. DR10 for Year 10 Drama"
        args: { filter: string, required: true, custom: true }
        select: c.nameShort
    courseName:
        name: "Course"
        desc: "Name"
        args: { filter: string, linked: Course.nameShort }
        select: c.name
    courseID:
        name: "Course"
        desc: "ID"
        args: { filter: string, linked: Course.nameShort, readonly: [ CourseClassPerson, TTDayRowClass ] }
        relationship: { table: Course, key: id, field: [ nameShort, schoolYear ]  }
        select: c.id
    yearGroupList:
        name: "Year Groups"
        desc: ""
        args: { filter: string, linked: TTID }
        relationship: { table: TT, key: yearGroupList, field: [ id ]  }
        select: tt.yearGroupList
    courseClassNameShort:
        name: "Class Short Name"
        desc: "e.g 1 for DR10.1"
        args: { filter: string, required: true, custom: true }
        select: cc.nameShort
    courseClassName:
        name: "Class"
        desc: "Name"
        args: { filter: string, linked: CourseClass.nameShort }
        select: cc.name
    courseClassID:
        name: "Class"
        desc: "ID"
        args: { filter: string, linked: CourseClass.nameShort }
        relationship: { table: CourseClass, key: id, field: [ nameShort, course ]  }
        select: cc.id
    TTDay:
        name: "Day Name"
        desc: "as used in the target timetable"
        args: { filter: string, required: true, custom: true }
        relationship: { table: TTDay, key: TTDayID, field: [ name, TTID ]  }
        select: ttd.name
    TTColumn:
        name: "Timetable Column"
        desc: "Linked"
        args: { filter: string, required: true, custom: true, readonly: true, linked: id }
        relationship: { table: TTColumn, key: id, join: TTDay, on: [id, TTColumn], field: [ id ] }
        select: ttc.nameShort
    TTColumnRowID:
        name: "Row Name"
        desc: "as used in the target timetable"
        args: { filter: string, required: true, custom: true }
        relationship: { table: TTColumnRow, key: id, field: [ name, TTColumn ]  }
        select: ttcr.name
    person:
        name: "Teacher"
        desc: "Username"
        args: { filter: string, required: true, custom: true }
        relationship: { table: Person, key: id, field: username  }
        select: p.username
    role:
        name: "Role"
        desc: ""
        value: "Teacher"
        args: { filter: string, hidden: true }
        select: ccp.role
    space:
        name: "Space Name"
        desc: ""
        args: { filter: string, required: true, custom: true }
        relationship: { table: Space, key: id, field: name }
        select: s.name
tables:
    Course:
        primaryKey:
            id
        uniqueKeys:
            - [ schoolYear, name ]
            - [ schoolYear, nameShort ]
        fields:
            - schoolYear
            - TT
            - name
            - nameShort
            - yearGroupList
    CourseClass:
        primaryKey:
            id
        uniqueKeys:
            - [ course, nameShort ]
        fields:
            - schoolYear
            - course
            - name
            - nameShort
    CourseClassPerson:
        primaryKey:
            id
        uniqueKeys:
            - [ courseClass, person ]
        fields:
            - schoolYear
            - course
            - courseClass
            - person
            - role
    TTDayRowClass:
        primaryKey:
            id
        uniqueKeys:
            - [ courseClass, TTDay, TTColumnRow ]
        fields:
            - schoolYear
            - TT
            - courseClass
            - TTDay
            - TTColumn
            - TTColumnRow
            - space
