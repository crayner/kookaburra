details:
    type: libraryRecordPrint
    name: Records - Print Publication
    table: LibraryItem
    modes: { update: true, insert: true, export: true }
    alias: li
access:
    module: Library
    action: Manage Catalog
primaryKey:
    id
uniqueKeys:
    - identifier
join:
    LibraryType:
        table: LibraryItem
        alias: lt
    Space:
        table: LibraryItem
        alias: s
    Ownership:
        table: LibraryItem
        alias: o
        targetTable: Person
    Department:
        table: LibraryItem
        alias: d
    ReplacementYear:
        table: LibraryItem
        alias: ry
        targetTable: SchoolYear
table:
    libraryType:
        name: "Type"
        desc: ""
        value: "Audio/Visual Hardware"
        args: { filter: string, required: true, custom: true, hidden: true }
        relationship: { table: LibraryType, key: id, field: name  }
        select: lt.name
    name:
        name: "Name"
        desc: "Volume or product name."
        args: { filter: string, required: true }
        select: li.name
    identifier:
        name: "Identifier"
        desc: "Must be unique, or will lead to update not insert."
        args: { filter: string, required: true }
        select: li.identifier
    producer:
        name: "Author/Brand"
        desc: "Who created the item?"
        args: { filter: string, required: true, custom: true }
        select: li.producer
    vendor:
        name: "Vendor"
        desc: "Who supplied the item?"
        args: { filter: string, custom: true }
        select: li.vendor
    purchaseDate:
        name: "Purchase Date"
        desc: ""
        args: { filter: date, custom: true }
        select: li.purchaseDate
    invoiceNumber:
        name: "Invoice Number"
        desc: ""
        args: { filter: string, custom: true }
        select: li.invoiceNumber
    space:
        name: "Location"
        desc: "Name"
        args: { filter: string, custom: true }
        relationship: { table: Space, key: SpaceID, field: name }
        select: s.name
    locationDetail:
        name: "Location Detail"
        desc: "Shelf, cabinet, sector, etc"
        args: { filter: string, custom: true }
        select: li.locationDetail
    ownershipType:
        name: "Ownership Type"
        desc: ""
        args: { filter: string, custom: true }
        select: li.ownershipType
    ownership:
        name: "Main User"
        desc: "Username of person the device is assigned to."
        args: { filter: string, custom: true }
        relationship: { table: Person, key: id, field: username  }
        select: o.username
    department:
        name: "Department"
        desc: "Short Name"
        args: { filter: string, custom: true }
        relationship: { table: Department, key: id, field: nameShort  }
        select: d.nameShort
    borrowable:
        name: "Borrowable?"
        desc: "Is item available for loan?"
        args: { filter: yesno, custom: true }
        select: li.borrowable
    status:
        name: "Status?"
        desc: ""
        args: { filter: string, custom: true }
        select: li.status
    replacement:
        name: "Replacement?"
        desc: ""
        args: { filter: yesno, custom: true }
        select: li.replacement
    replacementCost:
        name: "Replacement Cost"
        desc: ""
        args: { filter: numeric, custom: true }
        select: li.replacementCost
    replacementYear :
        name: "Replacement Year"
        desc: "School year name, as set in School Admin. Must already exist."
        args: { filter: schoolyear, custom: true }
        relationship: { table: SchoolYear, key: SchoolYearID, field: name  }
        select: ry.name
    comment:
        name: "Comments/Notes"
        desc: ""
        args: { filter: string, custom: true  }
        select: li.comment

    # Type-Specific Serializable Fields

    fieldFormat: 
        name: "Format"
        desc: ""
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldPublisher: 
        name: "Publisher"
        desc: "Name of the company who published the volume."
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldPublicationDate: 
        name: "Publication Date"
        desc: ""
        args: { filter: date, custom: true, readonly: true, serialize: fields  }
    fieldCountryofPublication: 
        name: "Country of Publication"
        desc: ""
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldEdition: 
        name: "Edition"
        desc: ""
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldISBN10: 
        name: "ISBN10"
        desc: "10-digit unique ISBN number."
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldISBN13: 
        name: "ISBN13"
        desc: "13-digit unique ISBN number."
        args: { filter: string, required: true, custom: true, readonly: true, serialize: fields  }
    fieldDescription: 
        name: "Description"
        desc: "A brief blurb describing the volume."
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldSubjects: 
        name: "Subjects"
        desc: "Comma separated list of subjects."
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldCollection: 
        name: "Collection"
        desc: ""
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldControlNumber: 
        name: "Control Number"
        desc: ""
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldCatalogingAuthority: 
        name: "Cataloging Authority"
        desc: " Issuing authority for Control Number."
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldReaderYoungest: 
        name: "Reader Age (Youngest)"
        desc: "Age in years, youngest reading age recommendation."
        args: { filter: numeric, custom: true, readonly: true, serialize: fields  }
    fieldReaderOldest: 
        name: "Reader Age (Oldest)"
        desc: "Age in years, oldest reading age recommendation."
        args: { filter: numeric, custom: true, readonly: true, serialize: fields  }
    fieldPageCount: 
        name: "Page Count"
        desc: "The number of pages in the volume."
        args: { filter: numeric, custom: true, readonly: true, serialize: fields  }
    fieldHeight: 
        name: "Height"
        desc: "The physical height of the volume, in cm."
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldWidth: 
        name: "Width"
        desc: "The physical width of the volume, in cm."
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldThickness: 
        name: "Thickness"
        desc: "The physical thickness of the volume, in cm."
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldLanguage: 
        name: "Language"
        desc: "The primary language of the volume."
        args: { filter: string, custom: true, readonly: true, serialize: fields  }
    fieldLink: 
        name: "Link"
        desc: "Link to web-based information on the volume."
        args: { filter: url, custom: true, readonly: true, serialize: fields  }
    fields:
        name: "Type-Specific Details"
        desc: ""
        args: { filter: string, serialize: fields, hidden: true, custom: true }
        select: li.fields
