details:
    type: usersFull
    name: User - Data - Full
    category: User
    table: Person
    modes: { update: true, insert: true, export: true }
    alias: p
access:
    module: User Admin
    action: Manage Users_edit
primaryKey:
    id
uniqueKeys:
    - username
join:
    PrimaryRole:
        table: Person
        alias: r
        targetTable: Role
    House:
        table: Person
        alias: h
    SchoolYearClassOf:
        table: Person
        alias: sy
        targetTable: SchoolYear
table:
    title:
        name: "Title"
        desc: "e.g. Ms., Miss, Mr., Mrs., Dr."
        args: {filter: string}
        select: p.title
    surname:
        name: "Surname"
        desc: "Family Name"
        args: {filter: string, required: true}
        select: p.surname
    firstName:
        name: "First Name"
        desc: "Given name"
        args: {filter: string, required: true}
        select: p.firstName
    preferredName:
        name: "Preferred Name"
        desc: "Most common name, alias, nickname, handle, etc"
        args: {filter: string, required: true}
        select: p.preferredName
    officialName:
        name: "Official Name"
        desc: "Full name as shown in ID documents."
        args: {filter: string, required: true}
        select: p.officialName
    nameInCharacters:
        name: "Name In Characters"
        desc: "Chinese or other character-based name."
        args: {filter: string}
        select: p.nameInCharacters
    gender:
        name: "Gender"
        desc: ""
        args: {filter: gender, required: true}
        select: p.gender
    dob:
        name: "Date of Birth"
        desc: ""
        args: {filter: date}
        select: p.dob
    primaryRole:
        name: "Primary Role"
        desc: "Name"
        args: {filter: string, required: true, custom: true }
        relationship: { table: Role, key: id, field: name  }
        select: r.name
    allRoles:
        name: "All Roles"
        desc: "Role Names, Comma separated"
        args: {filter: csv, required: true, custom: true }
        relationship: { table: Role, key: id, field: name }
        select: p.allRoles
    username:
        name: "Username"
        desc: "Must be unique."
        args: {filter: nospaces, required: true}
        select: p.username
    password:
        name: "Password"
        desc: ""
        args: {filter: nospaces, required: true, custom: true, function: generatePassword}
        select: p.passwordStrong
    passwordForceReset:
        name: "Force Reset Password?"
        desc: ""
        args: {filter: yesno, custom: true}
        select: p.passwordForceReset
    status:
        name: "Status"
        desc: ""
        args: {filter: status, custom: true}
        select: p.status
    canLogin:
        name: "Can Login?"
        desc: ""
        args: {filter: yesno, custom: true}
        select: p.canLogin
    email:
        name: "Email"
        desc: ""
        args: {filter: email}
        select: p.email
    emailAlternate:
        name: "Alternate Email"
        desc: ""
        args: {filter: email}
        select: p.emailAlternate
    studentID:
        name: "Student ID"
        desc: "Must be unique if set."
        args: {filter: string}
        select: p.studentID
    image_240:
        name: "User Photo"
        desc: "path from /uploads/ to medium portrait image (240px by 320px)"
        args: {filter: string}
        select: p.image_240

    dayType:
        name: "Day Type"
        desc: ""
        args: {filter: string}
        select: p.dayType
    dateStart:
        name: "Start Date"
        desc: "Users's first day at school."
        args: {filter: date}
        select: p.dateStart
    dateEnd:
        name: "End Date"
        desc: ""
        args: {filter: date}
        select: p.dateEnd
    schoolYearClassOf:
        name: "Class Of"
        desc: "When is the student expected to graduate?"
        args: {filter: schoolyear}
        relationship: { table: SchoolYear, key: id, field: name }
        select: sy.name
    lastSchool:
        name: "Last School"
        desc: ""
        args: {filter: string}
        select: p.lastSchool
    nextSchool:
        name: "Next School"
        desc: ""
        args: {filter: string}
        select: p.nextSchool
    departureReason:
        name: "Departure Reason"
        desc: ""
        args: {filter: string}
        select: p.departureReason

    address1:
        name: "Address 1"
        desc: "Unit, Building, Street"
        args: {filter: string}
        select: p.address1
    address1District:
        name: "Address 1 District"
        desc: "County, State, District"
        args: {filter: string}
        select: p.address1District
    address1Country:
        name: "Address 1 Country"
        desc: ""
        args: {filter: country}
        select: p.address1Country

    address2:
        name: "Address 2"
        desc: "Unit, Building, Street"
        args: {filter: string}
        select: p.address2
    address2District:
        name: "Address 2 District"
        desc: "County, State, District"
        args: {filter: string}
        select: p.address2District
    address2Country:
        name: "Address 2 Country"
        desc: ""
        args: {filter: country}
        select: p.address2Country

    phone1Type:
        name: "Phone 1 (Type)"
        desc: "Mobile, Home, Work, Fax, Pager, Other"
        args: {filter: phonetype, custom: true}
        select: p.phone1Type
    phone1CountryCode:
        name: "Phone 1 (Country Code)"
        desc: "IDD code, without 00 or +"
        args: {filter: phonecode }
        select: p.phone1CountryCode
    phone1:
        name: "Phone 1"
        desc: "No spaces or punctuation, just numbers"
        args: {filter: phone}
        select: p.phone1

    phone2Type:
        name: "Phone 2 (Type)"
        desc: "Mobile, Home, Work, Fax, Pager, Other"
        args: {filter: phonetype, custom: true}
        select: p.phone2Type
    phone2CountryCode:
        name: "Phone 2 (Country Code)"
        desc: "IDD code, without 00 or +"
        args: {filter: phonecode }
        select: p.phone2CountryCode
    phone2:
        name: "Phone 2"
        desc: "No spaces or punctuation, just numbers"
        args: {filter: phone}
        select: p.phone2

    phone3Type:
        name: "Phone 3 (Type)"
        desc: "Mobile, Home, Work, Fax, Pager, Other"
        args: {filter: phonetype, custom: true}
        select: p.phone3Type
    phone3CountryCode:
        name: "Phone 3 (Country Code)"
        desc: "IDD code, without 00 or +"
        args: {filter: phonecode }
        select: p.phone3CountryCode
    phone3:
        name: "Phone 3"
        desc: "No spaces or punctuation, just numbers"
        args: {filter: phone}
        select: p.phone3

    phone4Type:
        name: "Phone 4 (Type)"
        desc: "Mobile, Home, Work, Fax, Pager, Other"
        args: {filter: phonetype, custom: true}
        select: p.phone4Type
    phone4CountryCode:
        name: "Phone 4 (Country Code)"
        desc: "IDD code, without 00 or +"
        args: {filter: phonecode }
        select: p.phone4CountryCode
    phone4:
        name: "Phone 4"
        desc: "No spaces or punctuation, just numbers"
        args: {filter: phone}
        select: p.phone4

    website:
        name: "Website"
        desc: "Must start with http:// or https://"
        args: {filter: url}
        select: p.website

    languageFirst:
        name: "First Language"
        desc: ""
        args: {filter: language }
        select: p.languageFirst
    languageSecond:
        name: "Second Language"
        desc: ""
        args: {filter: language }
        select: p.languageSecond
    languageThird:
        name: "Third Language"
        desc: ""
        args: {filter: language }
        select: p.languageThird
    countryOfBirth:
        name: "Country of Birth"
        desc: ""
        args: {filter: country }
        select: p.countryOfBirth
    ethnicity:
        name: "Ethnicity"
        desc: ""
        args: {filter: ethnicity}
        select: p.ethnicity
    religion:
        name: "Religion"
        desc: ""
        args: {filter: string}
        select: p.religion
    citizenship1:
        name: "Citizenship 1"
        desc: ""
        args: {filter: country }
        select: p.citizenship1
    citizenship1Passport:
        name: "Citizenship 1 Passport"
        desc: ""
        args: {filter: string}
        select: p.citizenship1Passport
    citizenship1PassportScan:
        name: "Citizenship 1 Passport Scan"
        desc: "Less than 1440px by 900px"
        args: {filter: string}
        select: p.citizenship1PassportScan
    citizenship2:
        name: "Citizenship 2"
        desc: ""
        args: {filter: country }
        select: p.citizenship2
    citizenship2Passport:
        name: "Citizenship 2 Passport"
        desc: ""
        args: {filter: string}
        select: p.citizenship2Passport
    nationalIDCardNumber:
        name: "National ID Card Number"
        desc: ""
        args: {filter: string}
        select: p.nationalIDCardNumber
    nationalIDCardScan:
        name: "National ID Card Scan"
        desc: "Less than 1440px by 900px"
        args: {filter: string}
        select: p.nationalIDCardScan
    residencyStatus:
        name: "Residency Status"
        desc: ""
        args: {filter: string}
        select: p.residencyStatus
    visaExpiryDate:
        name: "Visa Expiry Date"
        desc: ""
        args: {filter: date}
        select: p.visaExpiryDate
    emergency1Name:
        name: "Emergency 1 Name"
        desc: "For students and staff only"
        args: {filter: string}
        select: p.emergency1Name

    emergency1Number1:
        name: "Emergency 1 Number 1"
        desc: "For students and staff only"
        args: {filter: string}
        select: p.emergency1Number1
    emergency1Number2:
        name: "Emergency 1 Number 2"
        desc: "For students and staff only"
        args: {filter: string}
        select: p.emergency1Number2
    emergency1Relationship:
        name: "Emergency 1 Relationship"
        desc: "For students and staff only"
        args: {filter: relation}
        select: p.emergency1Relationship

    emergency2Name:
        name: "Emergency 1 Name"
        desc: "For students and staff only"
        args: {filter: string}
        select: p.emergency2Name
    emergency2Number1:
        name: "Emergency 1 Number 1"
        desc: "For students and staff only"
        args: {filter: string}
        select: p.emergency2Number1
    emergency2Number2:
        name: "Emergency 1 Number 2"
        desc: "For students and staff only"
        args: {filter: string}
        select: p.emergency2Number2
    emergency2Relationship:
        name: "Emergency 1 Relationship"
        desc: "For students and staff only"
        args: {filter: relation}
        select: p.emergency2Relationship

    profession:
        name: "Profession"
        desc: "For parents only"
        args: {filter: string}
        select: p.profession
    employer:
        name: "Employer"
        desc: "For parents only"
        args: {filter: string}
        select: p.employer
    jobTitle:
        name: "Job Title"
        desc: "For parents only"
        args: {filter: string}
        select: p.jobTitle

    house:
        name: "House"
        desc: "Name"
        args: {filter: string}
        relationship: { table: House, key: id, field: name  }
        select: h.name
    lockerNumber:
        name: "Locker Number"
        desc: ""
        args: {filter: string}
        select: p.lockerNumber
    transport:
        name: "Transport"
        desc: ""
        args: {filter: string}
        select: p.transport
    transportNotes:
        name: "Transport Notes"
        desc: ""
        args: {filter: string}
        select: p.transportNotes
    vehicleRegistration:
        name: "Vehicle Registration"
        desc: ""
        args: {filter: string}
        select: p.vehicleRegistration
    receiveNotificationEmails:
        name: "Receive Email Notifications?"
        desc: ""
        args: {filter: yesno, custom: true}
        select: p.receiveNotificationEmails
